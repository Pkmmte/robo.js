"use strict";(self.webpackChunkrobo_js_docs=self.webpackChunkrobo_js_docs||[]).push([[6073],{80:(e,s,t)=>{t.r(s),t.d(s,{assets:()=>u,contentTitle:()=>c,default:()=>m,frontMatter:()=>a,metadata:()=>d,toc:()=>h});var n=t(4848),i=t(8453),r=t(5646),o=t(9733),l=t(9520);const a={description:"Learn how to add multiplayer features to your Discord Activity using Robo.js for real-time communication between clients.",image:"https://preview.robojs.dev?path=/discord-activities/multiplayer"},c="\u2694\ufe0f Multiplayer",d={id:"discord-activities/multiplayer",title:"\u2694\ufe0f Multiplayer",description:"Learn how to add multiplayer features to your Discord Activity using Robo.js for real-time communication between clients.",source:"@site/docs/discord-activities/multiplayer.mdx",sourceDirName:"discord-activities",slug:"/discord-activities/multiplayer",permalink:"/discord-activities/multiplayer",draft:!1,unlisted:!1,editUrl:"https://github.com/Wave-Play/robo.js/edit/main/docs/docs/discord-activities/multiplayer.mdx",tags:[],version:"current",lastUpdatedBy:"Pkmmte Xeleon",lastUpdatedAt:1720235282e3,frontMatter:{description:"Learn how to add multiplayer features to your Discord Activity using Robo.js for real-time communication between clients.",image:"https://preview.robojs.dev?path=/discord-activities/multiplayer"},sidebar:"tutorialSidebar",previous:{title:"\ud83d\udee1\ufe0f Discord Proxy",permalink:"/discord-activities/proxy"},next:{title:"\u2728 Getting Started with Discord Bots",permalink:"/discord-bots/getting-started"}},u={},h=[{value:"Sync Plugin",id:"sync-plugin",level:2},{value:"Setup",id:"setup",level:3},{value:"Usage",id:"usage",level:3},{value:"Dependency Array",id:"dependency-array",level:3},{value:"Learn More",id:"learn-more",level:3},{value:"Colyseus",id:"colyseus",level:2},{value:"Setup",id:"setup-1",level:3},{value:"Usage",id:"usage-1",level:3},{value:"More About Colyseus",id:"more-about-colyseus",level:3}];function p(e){const s={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",...(0,i.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(s.h1,{id:"\ufe0f-multiplayer",children:"\u2694\ufe0f Multiplayer"}),"\n",(0,n.jsxs)(s.p,{children:[(0,n.jsx)(s.strong,{children:"Discord Activities"})," are a great way to create multiplayer games and experiences. Even if you're not building a game, you can still use multiplayer features to create collaborative activities or experiences."]}),"\n",(0,n.jsxs)(s.p,{children:["Multiplayer features often involve websockets for real-time communication between clients. There are many ways to implement features like this. Depending on what you're building, we recommend either using our ",(0,n.jsx)(s.strong,{children:(0,n.jsx)(s.a,{href:"#sync-plugin",children:"@robojs/sync"})})," plugin or a more powerful solution like ",(0,n.jsx)(s.strong,{children:(0,n.jsx)(s.a,{href:"https://colyseus.io/",children:"Colyseus"})}),"."]}),"\n",(0,n.jsx)(s.p,{children:"Need a tutorial? We've got you covered!"}),"\n",(0,n.jsx)(o.Q,{children:(0,n.jsx)(r.Z,{href:"https://dev.to/waveplay/how-to-add-multiplayer-to-your-discord-activity-lo1",title:"\ud83d\udcda Add Multiplayer to Your Activity",description:"Create a real-time multiplayer Discord Activity."})}),"\n",(0,n.jsx)(s.h2,{id:"sync-plugin",children:"Sync Plugin"}),"\n",(0,n.jsxs)(s.p,{children:["If you're building a ",(0,n.jsx)(s.strong,{children:(0,n.jsx)(s.a,{href:"https://react.dev",children:"React"})})," app, you can use the ",(0,n.jsx)(s.strong,{children:"@robojs/sync"})," plugin to sync state across clients in real-time. This is the easiest way to add multiplayer functionality to your Discord Activity."]}),"\n",(0,n.jsxs)(s.p,{children:["Websocket features can be complex to set up, but ",(0,n.jsx)(s.strong,{children:"@robojs/sync"})," handles all of that for you. ",(0,n.jsx)(s.strong,{children:"Robo.js"})," plugins are designed to work out of the box, no matter how powerful, so you can focus on features!"]}),"\n",(0,n.jsx)(s.h3,{id:"setup",children:"Setup"}),"\n",(0,n.jsx)(s.p,{children:"To install, run the following command:"}),"\n",(0,n.jsx)(l.B,{execute:!0,children:"robo add @robojs/sync"}),"\n",(0,n.jsxs)(s.p,{children:["You will need to wrap your app with the ",(0,n.jsx)(s.code,{children:"<SyncProvider>"})," component. This will handle state synchronization for you."]}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-tsx",metastring:'title="/src/app/App.tsx"',children:"import { SyncProvider } from '@robojs/sync'\n\nexport function App() {\n\treturn (\n\t\t<SyncProvider>\n\t\t\t<Activity />\n\t\t</SyncProvider>\n\t)\n}\n"})}),"\n",(0,n.jsx)(s.h3,{id:"usage",children:"Usage"}),"\n",(0,n.jsxs)(s.p,{children:["If you're already familiar with React's ",(0,n.jsx)(s.code,{children:"useState"})," hook, then you'll feel right at home with ",(0,n.jsx)(s.code,{children:"useSyncState"}),". You can use it just like React's ",(0,n.jsx)(s.code,{children:"useState"})," hook, but the state will be synced across all clients in real-time. The only difference is that you need to provide a dependency array as the second argument."]}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-tsx",metastring:'title="/src/components/Player.tsx"',children:"import { useSyncState } from '@robojs/sync'\n\nexport function Player() {\n\tconst [position, setPosition] = useSyncState({ x: 0, y: 0 }, ['position'])\n\n\tconst handleMouseMove = (event) => {\n\t\tsetPosition({ x: event.clientX, y: event.clientY })\n\t}\n\n\treturn (\n\t\t<div onMouseMove={handleMouseMove}>\n\t\t\tPosition: {position.x}, {position.y}\n\t\t</div>\n\t)\n}\n"})}),"\n",(0,n.jsx)(s.p,{children:"Updating the state will cause all clients to receive the new state in real-time. When doing so, we recommend using an updater function to ensure you're always working with the latest state."}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-tsx",metastring:'title="/src/components/Player.tsx"',children:"const handleMouseMove = (event) => {\n\tsetPosition((prev) => ({ x: event.clientX, y: event.clientY }))\n}\n"})}),"\n",(0,n.jsx)(s.h3,{id:"dependency-array",children:"Dependency Array"}),"\n",(0,n.jsxs)(s.p,{children:["The dependency array (",(0,n.jsx)(s.code,{children:"['position']"}),") is used to determine which clients should share the same state. In this case, all clients with the same dependency array will share the same ",(0,n.jsx)(s.code,{children:"position"})," state. You can use any value in the dependency array, such as the user's ID or a room ID."]}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-tsx",metastring:'title="/src/components/Player.tsx"',children:"const { session } = useDiscordSdk()\nconst [position, setPosition] = useSyncState({ x: 0, y: 0 }, [session.user.id, 'position'])\n"})}),"\n",(0,n.jsx)(s.h3,{id:"learn-more",children:"Learn More"}),"\n",(0,n.jsx)(o.Q,{children:(0,n.jsx)(r.Z,{href:"../plugins/sync",title:"\ud83d\udd0c @robojs/sync",description:"Real-time state synchronization for multiplayer activities."})}),"\n",(0,n.jsx)(s.h2,{id:"colyseus",children:"Colyseus"}),"\n",(0,n.jsxs)(s.p,{children:["If you're building a more complex multiplayer game, we recommend using ",(0,n.jsx)(s.strong,{children:(0,n.jsx)(s.a,{href:"https://colyseus.io/",children:"Colyseus"})}),"."]}),"\n",(0,n.jsxs)(s.p,{children:["Colyseus is a powerful multiplayer game server that handles real-time communication between clients. It is well tested, scalable, and designed for building real-time multiplayer games. It works great with pretty much any game engine, UI library, or framework. That includes ",(0,n.jsx)(s.strong,{children:"Robo.js"}),"!"]}),"\n",(0,n.jsx)(s.h3,{id:"setup-1",children:"Setup"}),"\n",(0,n.jsx)(s.p,{children:"Unlike Robo plugins, Colyseus requires a bit more setup. Let's start by installing dependencies:"}),"\n",(0,n.jsx)(l.B,{install:!0,children:"@colyseus/core @colyseus/schema @colyseus/ws-transport colyseus.js"}),"\n",(0,n.jsx)(s.p,{children:"From here on, you'll need to:"}),"\n",(0,n.jsxs)(s.ol,{children:["\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.strong,{children:"Create a Server"}),": We recommend extending ",(0,n.jsx)(s.code,{children:"NodeEngine"})," in ",(0,n.jsx)(s.strong,{children:(0,n.jsx)(s.a,{href:"../plugins/server",children:"@robojs/server"})})," to work with Colyseus."]}),"\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.strong,{children:"Define Schemas"}),": Use ",(0,n.jsx)(s.strong,{children:(0,n.jsx)(s.a,{href:"https://docs.colyseus.io/schema/",children:"@colyseus/schema"})})," to define your state schemas."]}),"\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.strong,{children:"Define Rooms"}),": Create rooms that handle game logic and state synchronization."]}),"\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.strong,{children:"Connect Clients"}),": Use ",(0,n.jsx)(s.strong,{children:(0,n.jsx)(s.a,{href:"https://docs.colyseus.io/client/",children:"Colyseus.js"})})," to connect clients to your server."]}),"\n"]}),"\n",(0,n.jsx)(s.p,{children:"If the above sounds complicated, don't worry! We've created a template to help you get started!"}),"\n",(0,n.jsx)(o.Q,{children:(0,n.jsx)(r.Z,{href:"https://github.com/Wave-Play/robo.js/tree/main/templates/activity-ts-colyseus-react",title:"\ud83d\udd17 Multiplayer Colyseus (TS)",description:"A simplified TypeScript template using Colyseus."})}),"\n",(0,n.jsx)(s.h3,{id:"usage-1",children:"Usage"}),"\n",(0,n.jsx)(s.p,{children:"Once you've set up your server and rooms, you can start using Colyseus to handle real-time communication between clients. You can use Colyseus to handle game logic, state synchronization, and more."}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-ts",metastring:'title="/src/core/colyseus.ts"',children:"import { Client } from 'colyseus.js'\n\nconst client = new Client('ws://localhost:2567')\nconst room = client.join('my_room')\n\nroom.onStateChange((state) => {\n\tconsole.log('New state:', state)\n})\n"})}),"\n",(0,n.jsxs)(s.p,{children:["We recommend creating a ",(0,n.jsx)(s.strong,{children:(0,n.jsx)(s.a,{href:"https://react.dev/learn/passing-data-deeply-with-context",children:"Context Provider"})})," to manage the Colyseus client and room. This will allow you to access the client and room from anywhere in your activity."]}),"\n",(0,n.jsx)(s.h3,{id:"more-about-colyseus",children:"More About Colyseus"}),"\n",(0,n.jsx)(o.Q,{children:(0,n.jsx)(r.Z,{href:"https://docs.colyseus.io/",title:"\ud83d\udd17 Colyseus Docs",description:"Learn more about Colyseus and its features."})})]})}function m(e={}){const{wrapper:s}={...(0,i.R)(),...e.components};return s?(0,n.jsx)(s,{...e,children:(0,n.jsx)(p,{...e})}):p(e)}},5646:(e,s,t)=>{t.d(s,{Z:()=>o});t(6540);var n=t(8774),i=t(1107),r=t(4848);const o=e=>{const{description:s,href:t,title:o}=e;return(0,r.jsx)(n.A,{className:"col col--6 nodecor margin-bottom--lg",to:t,children:(0,r.jsxs)("div",{className:"card padding--lg cardContent",children:[(0,r.jsx)(i.A,{as:"h4",className:"text--truncate cardTitle",children:o}),(0,r.jsx)("p",{className:"text--truncate cardDescription",children:s})]})})}},9733:(e,s,t)=>{t.d(s,{Q:()=>i});t(6540);var n=t(4848);const i=e=>{const{children:s}=e;return(0,n.jsx)("div",{className:"row cardContainer",children:s})}},9520:(e,s,t)=>{t.d(s,{B:()=>y});var n=t(9165),i=t(5996),r=t.n(i),o=t(6540),l=t(4848);const a=e=>{const{defaultValue:s,onSelect:t,options:i}=e,[a,c]=(0,o.useState)(!1),[d,u]=(0,o.useState)(s??i[0]);(0,o.useEffect)((()=>{u(s??i[0])}),[s,i]);const h=e=>()=>{u(e),t(e),c(!1)};return(0,l.jsxs)("div",{className:"select-container",children:[(0,l.jsxs)("button",{className:"select-row",onClick:()=>{c(!a)},children:[(0,l.jsx)("span",{className:"select-text no-margin",children:d.label}),(0,l.jsx)(r(),{path:a?n.Fb5:n.W5x,size:"16px",color:"rgb(161, 161, 161)"})]}),a&&(0,l.jsx)("menu",{className:"select-menu",children:i.map((e=>(0,l.jsx)("button",{className:e.value===d.value?"select-menu-active":void 0,onClick:h(e),children:e.label},e.value)))})]})};var c=t(7965),d=t.n(c);var u=t(2035),h=t(4843);const p=(0,u.eU)("npm");const m=[{label:"NPM",value:"npm"},{label:"Yarn",value:"yarn"},{label:"PNPM",value:"pnpm"}],y=e=>{const{children:s,create:t,execute:i,install:o,title:c="Terminal"}=e,[u]=[async e=>d()(e)],[y,x]=function(){const[e,s]=(0,h.fp)(p);return[e,s]}(),j=m.find((e=>e.value===y));let g=s;"string"==typeof g&&(g=g.trim());let v="";t?v=function(e){if("npm"===e)return"npx create-robo";if("yarn"===e)return"yarn create robo";if("pnpm"===e)return"pnpm create robo"}(j.value)+" ":i?v=function(e){if("npm"===e)return"npx";if("yarn"===e)return"yarn";if("pnpm"===e)return"pnpm";if("bun"===e)return"bun"}(j.value)+" ":o&&g?v=function(e){if("npm"===e)return"npm install";if("yarn"===e)return"yarn add";if("pnpm"===e)return"pnpm add";if("bun"===e)return"bun add"}(j.value)+" ":o&&(v=j.value+" install");return(0,l.jsxs)("div",{className:"margin-bottom--lg terminal",children:[(0,l.jsxs)("div",{className:"terminal-header",children:[(0,l.jsx)(r(),{path:n.w_i,size:"16px",color:"rgb(161, 161, 161)"}),(0,l.jsx)("span",{className:"terminal-header-text",children:c}),(0,l.jsx)("div",{className:"spacer"}),(0,l.jsx)(a,{defaultValue:j,onSelect:e=>{console.log(e),x(e.value)},options:m}),(0,l.jsx)("button",{onClick:()=>{u(v+g)},children:(0,l.jsx)(r(),{path:n.$BT,size:"20px",color:"rgb(161, 161, 161)"})})]}),(0,l.jsx)("pre",{className:"prism-code language-bash codeBlock_node_modules-@docusaurus-theme-classic-lib-theme-CodeBlock-Content-styles-module thin-scrollbar terminal-bg",children:(0,l.jsx)("code",{className:"codeBlockLines_node_modules-@docusaurus-theme-classic-lib-theme-CodeBlock-Content-styles-module",children:(0,l.jsx)("span",{className:"token-line",children:t||i||o?(0,l.jsxs)(l.Fragment,{children:[(0,l.jsx)("span",{className:"token plain",children:v}),(0,l.jsx)("strong",{children:(0,l.jsx)("span",{className:"token plain",children:g})})]}):(0,l.jsx)("span",{className:"token plain",children:g})})})})]})}}}]);